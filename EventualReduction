/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
      
static class InputReader {

    private final InputStream stream;
    private final byte[] buf = new byte[8192];
    private int curChar, snumChars;

    public InputReader(InputStream st) {
        this.stream = st;
    }

    public int read() {
        if (snumChars == -1)
            throw new InputMismatchException();
        if (curChar >= snumChars) {
            curChar = 0;
            try {
                snumChars = stream.read(buf);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
            if (snumChars <= 0)
                return -1;
        }
        return buf[curChar++];
    }

    public int nextInt() {
        int c = read();
        while (isSpaceChar(c)) {
            c = read();
        }
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        int res = 0;
        do {
            res *= 10;
            res += c - '0';
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }

    public long nextLong() {
        int c = read();
        while (isSpaceChar(c)) {
            c = read();
        }
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        long res = 0;
        do {
            res *= 10;
            res += c - '0';
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }

    public int[] nextIntArray(int n) {
        int [] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = nextInt();
        }
        return a;
    }

    public static int[] shuffle(int[] a, Random gen)
    { for(int i = 0, n = a.length;i < n;i++)
    { int ind = gen.nextInt(n-i)+i;
        int d = a[i];
        a[i] = a[ind];
        a[ind] = d;

    }
        return a;
    }


    public String readString() {
        int c = read();
        while (isSpaceChar(c)) {
            c = read();
        }
        StringBuilder res = new StringBuilder();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (!isSpaceChar(c));
        return res.toString();
    }

    public String nextLine() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        StringBuilder res = new StringBuilder();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (!isEndOfLine(c));
        return res.toString();
    }

    public boolean isSpaceChar(int c) {
        return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
    }

    private boolean isEndOfLine(int c) {
        return c == '\n' || c == '\r' || c == -1;
    }

}
        
	public static void main (String[] args) throws java.lang.Exception
	{
// 		InputReader inp = new InputReader(System.in); 
// 		PrintWriter out = new PrintWriter(System.out) ;

        Scanner inp = new Scanner(System.in); 
		
		int t = inp.nextInt(); 
		
		while(t>0) {
		    int N = inp.nextInt(); 
		    String s = inp.next(); 
		    
		    Map<Character, Integer> obj = new HashMap<Character,Integer>(); 
		    
		    for(int i=0; i<s.length(); i++) {
		        if(obj.get(s.charAt(i))==null) {
		            obj.put(s.charAt(i), 1); 
		        }
		        
		        else {
		            obj.put(s.charAt(i), obj.get(s.charAt(i))+1) ; 
		        }
		    }
		    
		   
		    Object array[] = obj.values().toArray(); 
		    
		    int array1[] = new int[array.length]; 
		    
		    for(int k=0; k<array1.length; k++) {
		        array1[k] = (int)array[k]; 
		    }
		   
		    int j=0; 
		    for(j=0; j<array1.length; j++) {
		        if(array1[j]%2==0) {
		            continue; 
		        }
		        
		        else {
		           System.out.println("NO"); 
		            break ; 
		        }
		    }
		    
		    if(j==array1.length) {
		        System.out.println("YES"); 
		    }
		    
		    t--; 
		}
		
// 		out.close(); 
	}
}
